
fs.o:     file format elf32-i386


Disassembly of section .text:

00001000 <main>:
    1000:	f3 0f 1e fb          	endbr32 
    1004:	8d 4c 24 04          	lea    ecx,[esp+0x4]
    1008:	83 e4 f0             	and    esp,0xfffffff0
    100b:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
    100e:	55                   	push   ebp
    100f:	89 e5                	mov    ebp,esp
    1011:	53                   	push   ebx
    1012:	e8 2f 02 00 00       	call   1246 <__x86.get_pc_thunk.bx>
    1017:	81 c3 dd 2f 00 00    	add    ebx,0x2fdd
    101d:	51                   	push   ecx
    101e:	83 ec 0c             	sub    esp,0xc
    1021:	8d 83 0c e0 ff ff    	lea    eax,[ebx-0x1ff4]
    1027:	50                   	push   eax
    1028:	e8 09 01 00 00       	call   1136 <string::strlen(char const*)>
    102d:	83 c4 10             	add    esp,0x10
    1030:	8d 65 f8             	lea    esp,[ebp-0x8]
    1033:	31 c0                	xor    eax,eax
    1035:	59                   	pop    ecx
    1036:	5b                   	pop    ebx
    1037:	5d                   	pop    ebp
    1038:	8d 61 fc             	lea    esp,[ecx-0x4]
    103b:	c3                   	ret    

0000103c <string::strstrip(char*)>:
    103c:	f3 0f 1e fb          	endbr32 
    1040:	55                   	push   ebp
    1041:	89 e5                	mov    ebp,esp
    1043:	83 ec 18             	sub    esp,0x18
    1046:	83 ec 0c             	sub    esp,0xc
    1049:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    104c:	e8 ba 00 00 00       	call   110b <string::strlen(char*)>
    1051:	83 c4 10             	add    esp,0x10
    1054:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    1057:	83 6d f4 01          	sub    DWORD PTR [ebp-0xc],0x1
    105b:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    105e:	f7 d0                	not    eax
    1060:	c1 e8 1f             	shr    eax,0x1f
    1063:	84 c0                	test   al,al
    1065:	74 1c                	je     1083 <string::strstrip(char*)+0x47>
    1067:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
    106a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    106d:	01 d0                	add    eax,edx
    106f:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    1072:	3c 0a                	cmp    al,0xa
    1074:	75 e1                	jne    1057 <string::strstrip(char*)+0x1b>
    1076:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
    1079:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    107c:	01 d0                	add    eax,edx
    107e:	c6 00 00             	mov    BYTE PTR [eax],0x0
    1081:	eb d4                	jmp    1057 <string::strstrip(char*)+0x1b>
    1083:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1086:	c9                   	leave  
    1087:	c3                   	ret    

00001088 <string::reverse(char*)>:
    1088:	f3 0f 1e fb          	endbr32 
    108c:	55                   	push   ebp
    108d:	89 e5                	mov    ebp,esp
    108f:	83 ec 18             	sub    esp,0x18
    1092:	83 ec 0c             	sub    esp,0xc
    1095:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    1098:	e8 6e 00 00 00       	call   110b <string::strlen(char*)>
    109d:	83 c4 10             	add    esp,0x10
    10a0:	83 e8 01             	sub    eax,0x1
    10a3:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
    10a6:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
    10ad:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    10b0:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    10b3:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
    10b6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    10b9:	01 d0                	add    eax,edx
    10bb:	0f b6 10             	movzx  edx,BYTE PTR [eax]
    10be:	8b 4d f0             	mov    ecx,DWORD PTR [ebp-0x10]
    10c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    10c4:	01 c8                	add    eax,ecx
    10c6:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    10c9:	38 c2                	cmp    dl,al
    10cb:	74 3b                	je     1108 <string::reverse(char*)+0x80>
    10cd:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
    10d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    10d3:	01 d0                	add    eax,edx
    10d5:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    10d8:	88 45 eb             	mov    BYTE PTR [ebp-0x15],al
    10db:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    10de:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    10e1:	01 d0                	add    eax,edx
    10e3:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
    10e6:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    10e9:	01 ca                	add    edx,ecx
    10eb:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    10ee:	88 02                	mov    BYTE PTR [edx],al
    10f0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    10f3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    10f6:	01 c2                	add    edx,eax
    10f8:	0f b6 45 eb          	movzx  eax,BYTE PTR [ebp-0x15]
    10fc:	88 02                	mov    BYTE PTR [edx],al
    10fe:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
    1102:	83 6d f0 01          	sub    DWORD PTR [ebp-0x10],0x1
    1106:	eb ab                	jmp    10b3 <string::reverse(char*)+0x2b>
    1108:	90                   	nop
    1109:	c9                   	leave  
    110a:	c3                   	ret    

0000110b <string::strlen(char*)>:
    110b:	f3 0f 1e fb          	endbr32 
    110f:	55                   	push   ebp
    1110:	89 e5                	mov    ebp,esp
    1112:	83 ec 10             	sub    esp,0x10
    1115:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [ebp-0x4],0x0
    111c:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
    111f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1122:	01 d0                	add    eax,edx
    1124:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    1127:	84 c0                	test   al,al
    1129:	74 06                	je     1131 <string::strlen(char*)+0x26>
    112b:	83 45 fc 01          	add    DWORD PTR [ebp-0x4],0x1
    112f:	eb eb                	jmp    111c <string::strlen(char*)+0x11>
    1131:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1134:	c9                   	leave  
    1135:	c3                   	ret    

00001136 <string::strlen(char const*)>:
    1136:	f3 0f 1e fb          	endbr32 
    113a:	55                   	push   ebp
    113b:	89 e5                	mov    ebp,esp
    113d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    1140:	e8 c6 ff ff ff       	call   110b <string::strlen(char*)>
    1145:	83 c4 04             	add    esp,0x4
    1148:	c9                   	leave  
    1149:	c3                   	ret    

0000114a <string::strcmp(char const*, char const*)>:
    114a:	f3 0f 1e fb          	endbr32 
    114e:	55                   	push   ebp
    114f:	89 e5                	mov    ebp,esp
    1151:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1154:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    1157:	84 c0                	test   al,al
    1159:	74 24                	je     117f <string::strcmp(char const*, char const*)+0x35>
    115b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    115e:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    1161:	84 c0                	test   al,al
    1163:	74 1a                	je     117f <string::strcmp(char const*, char const*)+0x35>
    1165:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1168:	0f b6 10             	movzx  edx,BYTE PTR [eax]
    116b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    116e:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    1171:	38 c2                	cmp    dl,al
    1173:	75 0a                	jne    117f <string::strcmp(char const*, char const*)+0x35>
    1175:	83 45 08 01          	add    DWORD PTR [ebp+0x8],0x1
    1179:	83 45 0c 01          	add    DWORD PTR [ebp+0xc],0x1
    117d:	eb d2                	jmp    1151 <string::strcmp(char const*, char const*)+0x7>
    117f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1182:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    1185:	0f be d0             	movsx  edx,al
    1188:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    118b:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    118e:	0f be c0             	movsx  eax,al
    1191:	29 c2                	sub    edx,eax
    1193:	89 d0                	mov    eax,edx
    1195:	5d                   	pop    ebp
    1196:	c3                   	ret    

00001197 <string::strncmp(char const*, char const*, int)>:
    1197:	f3 0f 1e fb          	endbr32 
    119b:	55                   	push   ebp
    119c:	89 e5                	mov    ebp,esp
    119e:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
    11a2:	74 32                	je     11d6 <string::strncmp(char const*, char const*, int)+0x3f>
    11a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    11a7:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    11aa:	84 c0                	test   al,al
    11ac:	74 28                	je     11d6 <string::strncmp(char const*, char const*, int)+0x3f>
    11ae:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    11b1:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    11b4:	84 c0                	test   al,al
    11b6:	74 1e                	je     11d6 <string::strncmp(char const*, char const*, int)+0x3f>
    11b8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    11bb:	0f b6 10             	movzx  edx,BYTE PTR [eax]
    11be:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    11c1:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    11c4:	38 c2                	cmp    dl,al
    11c6:	75 0e                	jne    11d6 <string::strncmp(char const*, char const*, int)+0x3f>
    11c8:	83 45 08 01          	add    DWORD PTR [ebp+0x8],0x1
    11cc:	83 45 0c 01          	add    DWORD PTR [ebp+0xc],0x1
    11d0:	83 6d 10 01          	sub    DWORD PTR [ebp+0x10],0x1
    11d4:	eb c8                	jmp    119e <string::strncmp(char const*, char const*, int)+0x7>
    11d6:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
    11da:	74 18                	je     11f4 <string::strncmp(char const*, char const*, int)+0x5d>
    11dc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    11df:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    11e2:	0f be d0             	movsx  edx,al
    11e5:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    11e8:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    11eb:	0f be c0             	movsx  eax,al
    11ee:	29 c2                	sub    edx,eax
    11f0:	89 d0                	mov    eax,edx
    11f2:	eb 05                	jmp    11f9 <string::strncmp(char const*, char const*, int)+0x62>
    11f4:	b8 00 00 00 00       	mov    eax,0x0
    11f9:	5d                   	pop    ebp
    11fa:	c3                   	ret    

000011fb <string::strcpy(char*, char const*)>:
    11fb:	f3 0f 1e fb          	endbr32 
    11ff:	55                   	push   ebp
    1200:	89 e5                	mov    ebp,esp
    1202:	83 ec 10             	sub    esp,0x10
    1205:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [ebp-0x4],0x0
    120c:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
    120f:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1212:	01 d0                	add    eax,edx
    1214:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    1217:	84 c0                	test   al,al
    1219:	74 1b                	je     1236 <string::strcpy(char*, char const*)+0x3b>
    121b:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
    121e:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1221:	01 d0                	add    eax,edx
    1223:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
    1226:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    1229:	01 ca                	add    edx,ecx
    122b:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    122e:	88 02                	mov    BYTE PTR [edx],al
    1230:	83 45 fc 01          	add    DWORD PTR [ebp-0x4],0x1
    1234:	eb d6                	jmp    120c <string::strcpy(char*, char const*)+0x11>
    1236:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
    1239:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    123c:	01 d0                	add    eax,edx
    123e:	c6 00 00             	mov    BYTE PTR [eax],0x0
    1241:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1244:	c9                   	leave  
    1245:	c3                   	ret    

00001246 <__x86.get_pc_thunk.bx>:
    1246:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    1249:	c3                   	ret    
